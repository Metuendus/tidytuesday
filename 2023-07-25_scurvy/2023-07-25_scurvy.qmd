---
title: "2023-07-25_scurvy"
date: 2023-07-25
author: "José Carlos Corona"
format:
    html:
      theme: cosmo
      toc: true
      toc-depth: 3
      number-sections: true
      code-tools:
        source: true
        toggle: true
        caption: none
      code-copy: true
      code-fold: true
      code-link: true
      highlight-style: oblivion
      smooth-scroll: true
---
# TidyTuesday

Join the R4DS Online Learning Community in the weekly #TidyTuesday event!
Every week we post a raw dataset, a chart or article related to that dataset, and ask you to explore the data.
While the dataset will be “tamed”, it will not always be tidy! As such you might need to apply various R for Data Science techniques to wrangle the data into a true tidy format.
The goal of TidyTuesday is to apply your R skills, get feedback, explore other’s work, and connect with the greater #RStats community!
As such we encourage everyone of all skills to participate!

```{r setup, include=FALSE}
if (!require("pacman")) install.packages("pacman")
pacman::p_load(
  formattable,
  ggthemr,
  plotly,
  tidyverse,
  tidytuesdayR
)
ggthemr('flat')
```

# Load the weekly Data

Download the weekly data and make available in the `tt` object.

```{r Load}

tt <- tt_load("2023-07-25")

```


# Readme

Take a look at the readme for the weekly data to get insight on the dataset.
This includes a data dictionary, source, and a link to an article on the data.

```{r Readme, eval = interactive()}

tt

```


# Glimpse Data

Take an initial look at the format of the data available.

```{r Glimpse}
data <- tt$scurvy
data %>% 
  glimpse() %>% 
  formattable()
```

# Wrangle

Explore the data and process it into a nice format for plotting! Access each dataset by name by using a dollarsign after the `tt` object and then the name of the data set.

```{r Wrangle}
clean_data <- data %>% 
  pivot_longer(
    cols = ends_with("_d6"),
    names_to = "symptom_d6",
    values_to = "level"
  ) %>% 
  mutate(level = as.numeric(str_remove(level, "_.*")),
         symptom_d6 = str_remove(symptom_d6, "_d6")) 
```


# Visualize

Using your processed dataset, create your unique visualization.

```{r Visualize}
p <- clean_data %>% 
  group_by(treatment, symptom_d6) %>% 
  summarise(avg_level = mean(level)) %>% 
  ggplot(aes(treatment, avg_level, fill = symptom_d6)) +
  geom_col() +
  coord_flip() +
  facet_wrap(~symptom_d6)

ggplotly(p)
```
```{r}
p <- clean_data %>% 
  filter(symptom_d6 != "fit_for_duty") %>% 
  mutate(
    symptom_d6 = case_match(symptom_d6,
                            "gum_rot" ~ "encias_sangrantes",
                            "lassitude" ~ "lasitud",
                            "skin_sores" ~ "llagas_de_la_piel",
                            "weakness_of_the_knees" ~ "debilidad_de_las_rodillas"),
    treatment = case_match(treatment,
      "cider" ~ "sidra",
      "citrus" ~ "cítricos",
      "dilute_sulfuric_acid" ~ "ácido_sulfúrico_diluido",
      "purgative_mixture" ~ "mezcla_purgante",
      "sea_water" ~ "agua_de_mar",
      "vinegar" ~ "vinagre"
    )
  ) %>% 
  group_by(treatment, symptom_d6) %>% 
  summarise(avg_level = mean(level)) %>% 
  ggplot(aes(treatment, avg_level, color = symptom_d6)) +
  geom_point(size = 2) +
  geom_segment(aes(x = treatment, xend = treatment, y = 0, yend = avg_level)) +
  coord_flip() +
  facet_wrap(~symptom_d6) +
  labs(title = "El Impacto Revolucionario de los Cítricos: Descubrimiento de la Cura del Escorbuto",
       subtitle = 
         "En el estudio pionero de James Lind en 1757, se examinaron 12 pacientes con escorbuto, sometidos a diversos tratamientos. \nSorprendentemente, solo aquellos tratados con cítricos lograron reducir los síntomas en tan solo 6 días. \nEste hallazgo histórico marcó el inicio de una nueva era en la medicina y demostró el poder curativo de los cítricos, \nllevando al descubrimiento de una cura efectiva para una enfermedad que había afectado a la humanidad durante siglos.",
       caption = "Con datos del proyecto Tidyverse del 2023-07-25") +
  xlab("Nivel") +
  ylab("Escala del síntoma") +
  theme(legend.position = "none") 

p
```

# Save Image

Save your image for sharing. Be sure to use the `#TidyTuesday` hashtag in your post on twitter! 

```{r}
# This will save your most recent plot
ggsave(
  filename = "scurvy.png",
  plot = p,
  width = 12, 
  height = 5,
  dpi = 300,
  device = "png")
```